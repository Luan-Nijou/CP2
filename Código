// https://www.tinkercad.com/things/5Hs7n0zbglx-teste-principal-urgente/editel
#include <LiquidCrystal.h>

LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
int LDR_PIN = A0;
int GREEN_LED_PIN = 6;
int YELLOW_LED_PIN = 7;
int RED_LED_PIN = 8;
const int BUZZER_PIN = 9;
float Temp_M = 0;
float accuml = 0;
 int i;
  
const int Temp_PIM = A1;
int sensorhumidade = 0;
int RawValue= 0;
double Voltage = 0;
float tempC = 0;


// Define os limiares de luminosidade
int MODO_OK = 870;    // Nível de luminosidade considerado OK
int MODO_ALERTA = 950;  // Nível de luminosidade considerado em alerta
int humi_OK = 50; 
int humi_ALERTA = 70; 
int temp_OK = 10 ;    
int temp_ALERTA = 15; 

// Define o estado atual do sistema
int LumiState = 0;  // 0 = OK, 1 = Alerta, 2 = Problema

void setup() {
  lcd.begin(16, 2);
  pinMode(GREEN_LED_PIN, OUTPUT);
  pinMode(YELLOW_LED_PIN, OUTPUT);
  pinMode(RED_LED_PIN, OUTPUT);
  pinMode(BUZZER_PIN, OUTPUT);
  Serial.begin(9600);
  pinMode(A2, INPUT);
  
}
 

void Temp_Rod() {
  if (tempC<temp_OK) {
 	 lcd.clear();
  	 lcd.setCursor(0, 0);
  	 lcd.print("Temp. Baixa ");
  	 lcd.setCursor(0, 1);
 	 lcd.print("Temp. = ");
  	 lcd.println(tempC);
     tone(BUZZER_PIN,1000,3000);
     digitalWrite(YELLOW_LED_PIN, HIGH);
    }else if (tempC<temp_ALERTA){
    lcd.clear();
  	lcd.setCursor(0, 0);
  	lcd.print("Temp. OK ");
  	lcd.setCursor(0, 1);
  	lcd.print("Temp. = ");
  	lcd.println(tempC,0);      
    } else {
    lcd.clear();
  	lcd.setCursor(0, 0);
    lcd.print("Temp. ALTA ");
  	lcd.setCursor(0, 1);
  	lcd.print("Temp. = ");
  	lcd.println(tempC,0);
    tone(BUZZER_PIN,1000,3000);
    digitalWrite(RED_LED_PIN, HIGH);
  }
}
void Humi_Rod() {
  if (map(sensorhumidade, 0, 1023, 0, 100)<humi_OK) {
 	 lcd.clear();
  	 lcd.setCursor(0, 0);
  	 lcd.print("Umid. Baixa ");
  	 lcd.setCursor(0, 1);
 	 lcd.print("Umid. = ");
  	 lcd.println(map(sensorhumidade, 0, 1023, 0, 100));
     tone(BUZZER_PIN,1000,3000);
     digitalWrite(YELLOW_LED_PIN, HIGH);
    }else if (map(sensorhumidade, 0, 1023, 0, 100)<humi_ALERTA){
    lcd.clear();
  	lcd.setCursor(0, 0);
  	lcd.print("Umid. OK ");
  	lcd.setCursor(0, 1);
  	lcd.print("Umid. = ");
  	lcd.println(map(sensorhumidade, 0, 1023, 0, 100));      
    } else {
    lcd.clear();
  	lcd.setCursor(0, 0);
    lcd.print("Umid. ALTA ");
  	lcd.setCursor(0, 1);
  	lcd.print("Umid. =");
  	lcd.println(map(sensorhumidade, 0, 1023, 0, 100));
    tone(BUZZER_PIN,1000,3000);
    digitalWrite(RED_LED_PIN, HIGH);
  }
}
void loop() {
  int luminosity = analogRead(LDR_PIN);
   Serial.print("\n LDR  =  ");
   Serial.print(luminosity);
  RawValue = analogRead(Temp_PIM);
  Voltage = (RawValue / 1023.0) * 5000; 
  tempC = (Voltage-500) * 0.1; // 500 de diferença        
  Serial.print("\n Temperatura C =  ");
  Serial.print(tempC,0);
  sensorhumidade = analogRead(A2);
  Serial.print("\n Humidade: "); 
  Serial.print(map(sensorhumidade, 0, 1023, 0, 100));
  Serial.println("%");
  delay(1000);
  
   for (int i=0; i<5; i++){                         
         accuml = accuml + tempC;       
      }

float Temp_M = accuml / 5; 
  
 
  //void temp 
  if (luminosity <= MODO_OK) {
    LumiState = 0;  // OK
  } else if (luminosity <= MODO_ALERTA) {
    LumiState = 1;  // Alerta
  } else {
    LumiState = 2;  // Problema
  }
  
  
  // Verifica o estado atual do sistema
   switch (LumiState) {
  	case 0:      
      digitalWrite(GREEN_LED_PIN, HIGH);
      digitalWrite(YELLOW_LED_PIN, LOW);
      digitalWrite(RED_LED_PIN, LOW);
      noTone(BUZZER_PIN);
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Ambiente OK");
     delay(1000);
    while(true){
    	Temp_Rod();
      	delay(1000);
      	Humi_Rod();
      	delay(1000);
      	break;
    	}
      break;
    delay(3000);
    
    case 1: 
      digitalWrite(GREEN_LED_PIN, LOW);
      digitalWrite(YELLOW_LED_PIN, HIGH);
      digitalWrite(RED_LED_PIN, LOW);
      noTone(BUZZER_PIN);      	
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Ambiente a meia");
      lcd.setCursor(0, 1);
      lcd.print("Luz");    
      delay(1000);
    while(true){
    	Temp_Rod();
      	delay(1000);
      	Humi_Rod();
      	delay(1000);
      	break;
    	}
      break;
    delay(3000);
    
    case 2:
      digitalWrite(GREEN_LED_PIN, LOW);
      digitalWrite(YELLOW_LED_PIN, LOW);
      digitalWrite(RED_LED_PIN, HIGH);
      tone(BUZZER_PIN,1000,3000);
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Ambiente muito ");
      lcd.setCursor(0, 1);
      lcd.print("CLARO");
      delay(1000);
    while(true){
    	Temp_Rod();
      	delay(1000);
      	Humi_Rod();
      	delay(1000);
      	break;
    	}
      break;
    delay(3000);
    default:
    	printf("1");
   }
}
  

      


  


  
    


  
  
  
   
 
